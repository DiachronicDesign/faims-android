Object types = fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'type';");
Object locations = fetchAll("select vocabid, vocabname from vocabulary left join attributekey using (attributeid) where attributename = 'location';");
Object relationships = fetchAll("select relntypename, relntypename from relntype;");

String entity_id;
String rel_id;

saveEntity() {
	
	entity_id = updateEntity(null);
	
}

loadEntity() {
	
	if (entity_id == null) return;
	
	Object entity = fetchArchEnt(entity_id);
	
	for (Object attribute : entity) {
		System.out.println(attribute.toString());
		if ("name".equals(attribute.getName())) {
			setFieldValue("tabgroup1/tab1/name", attribute.getText());
		} else if ("value".equals(attribute.getName())) {
			setFieldValue("tabgroup1/tab1/value", attribute.getMeasure());
			setFieldValue("tabgroup1/tab1/value-description", attribute.getText());
			setFieldValue("tabgroup1/tab1/value-certainty", attribute.getCertainty());
		} else if ("date".equals(attribute.getName())) {
			setFieldValue("tabgroup1/tab1/date", attribute.getText());
		} else if ("time".equals(attribute.getName())) {
			setFieldValue("tabgroup1/tab1/time", attribute.getText());
		} else if ("type".equals(attribute.getName())) {
			setFieldValue("tabgroup1/tab1/type", attribute.getVocab());
			setFieldValue("tabgroup1/tab1/type-description", attribute.getText());
		} else if ("location".equals(attribute.getName())) {
			List locations = new ArrayList();
			locations.add(new NameValuePair(attribute.getVocab(), "true"));
			setFieldValue("tabgroup1/tab1/location", locations);
			setFieldValue("tabgroup1/tab1/location-value", attribute.getMeasure());
			setFieldValue("tabgroup1/tab1/location-certainty", attribute.getCertainty());
		} else if ("supervisor".equals(attribute.getName())) {
			setFieldValue("tabgroup1/tab1/supervisor", attribute.getText());
		}
	}
	
}

updateEntity(entity_id) {
	List attributes = createAttributeList();
	attributes.add(createEntityAttribute("name", getFieldValue("tabgroup1/tab1/name"), null, null, null));
	attributes.add(createEntityAttribute("value", getFieldValue("tabgroup1/tab1/value-description"), null, getFieldValue("tabgroup1/tab1/value"), getFieldValue("tabgroup1/tab1/value-certainty")));
	attributes.add(createEntityAttribute("date", getFieldValue("tabgroup1/tab1/date"), null, null, null));
	attributes.add(createEntityAttribute("time", getFieldValue("tabgroup1/tab1/time"), null, null, null));
	attributes.add(createEntityAttribute("type", getFieldValue("tabgroup1/tab1/type-description"), getFieldValue("tabgroup1/tab1/type"), null, null));
	
	Object values = getFieldValue("tabgroup1/tab1/location");
	
	for (Object value : values) {
		attributes.add(createEntityAttribute("location", null, value.getName(), getFieldValue("tabgroup1/tab1/location-value"), getFieldValue("tabgroup1/tab1/location-certainty")));
	}
	
	attributes.add(createEntityAttribute("supervisor", getFieldValue("tabgroup1/tab1/supervisor"), null, null, null));
	
	String id = saveArchEnt(entity_id, "simple", null, attributes);
	
	updateEntityRelationship();
	
	return id;
}

clearEntity() {
	setFieldValue("tabgroup1/tab1/name", "");
	setFieldValue("tabgroup1/tab1/value", "");
	setFieldValue("tabgroup1/tab1/value-description", "");
	setFieldValue("tabgroup1/tab1/value-certainty", "");
	setFieldValue("tabgroup1/tab1/type-description", "");
	setFieldValue("tabgroup1/tab1/location-value", "");
	setFieldValue("tabgroup1/tab1/location-certainty", "");
	populateDropDown("tabgroup1/tab1/type", types);
	populateCheckBoxGroup("tabgroup1/tab1/location", locations);
	
}

saveRelationship() {
	
	rel_id = updateRelationship(null);
}

loadRelationship() {

	if (rel_id == null) return;
	
	Object relationship = fetchRel(rel_id);
	
	for (Object attribute : relationship) {
		System.out.println(attribute.toString());
		if ("name".equals(attribute.getName())) {
			setFieldValue("tabgroup1/tab2/name", attribute.getText());
		}
	}
}

updateRelationship(rel_id) {
	String type = getFieldValue("tabgroup1/tab2/type");
	System.out.println(type);

	List attributes = createAttributeList();
	attributes.add(createRelationshipAttribute("name", getFieldValue("tabgroup1/tab2/name"), null));
	
	String id = saveRel(rel_id, type, null, attributes);
	
	updateEntityRelationship();
	
	return id;
}

clearRelationship() {
	 setFieldValue("tabgroup1/tab2/name", "");
	 populateDropDown("tabgroup1/tab2/type", relationships);
}

updateEntityRelationship() {
	Object entities = fetchAll("select uuid, uuid from archentity;");
	Object relationships = fetchAll("select relationshipid, relationshipid from relationship;");
	
	populateDropDown("tabgroup1/tab3/entity", entities);
	populateDropDown("tabgroup1/tab3/relationship", relationships);
	
}

saveEntityRelationship() {
	addReln(getFieldValue("tabgroup1/tab3/entity"), getFieldValue("tabgroup1/tab3/relationship"), getFieldValue("tabgroup1/tab3/verb"));
	
	showToast("record saved");
}

onEvent("tabgroup1/tab1/save", "click", "saveEntity()");
onEvent("tabgroup1/tab1/update", "click", "updateEntity(entity_id)");
onEvent("tabgroup1/tab1/load", "click", "loadEntity()");
onEvent("tabgroup1/tab1/clear", "click", "clearEntity()");

onEvent("tabgroup1/tab2/save", "click", "saveRelationship()");
onEvent("tabgroup1/tab2/update", "click", "updateRelationship(rel_id)");
onEvent("tabgroup1/tab2/load", "click", "loadRelationship()");
onEvent("tabgroup1/tab2/clear", "click", "clearRelationship()");

onEvent("tabgroup1/tab3/save", "click", "saveEntityRelationship()");

clearEntity();
clearRelationship();

selectedName() {
	System.out.println(getListItemValue());
}

onEvent("tabgroup1/tab4/names", "click", "selectedName()");
